#!/usr/bin/env php
<?php

/**
 * @copyright OXID eSales AG, All rights reserved
 * @author OXID Professional services
 *
 * See LICENSE file for license details.
 */

use OxidProfessionalServices\OxidConsole\Core\Application;
use OxidProfessionalServices\OxidConsole\Core\CommandCollector;
use OxidProfessionalServices\OxidConsole\Core\Composer\VersionHelper;

use Symfony\Component\Console\Input\ArgvInput;
$autoloadFileExist = false;
$autoloadFiles = [
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/../../vendor/autoload.php',
    __DIR__ . '/../../../vendor/autoload.php',
    __DIR__ . '/../../../../vendor/autoload.php',
];
foreach ($autoloadFiles as $autoloadFile) {
    if (file_exists($autoloadFile)) {
        require_once $autoloadFile;
        $autoloadFileExist = true;
        break;
    }
}
if (!$autoloadFileExist) {
    exit("autoload.php file was not found, check composer!");
}
$shopId = (int) (new ArgvInput())->getParameterOption(
    '--' . Executor::SHOP_ID_PARAMETER_OPTION_NAME,
    0
);
if ($shopId !== 0) {
    $_POST['shp'] = $shopId;
}

try {
    $v = new VersionHelper;
    $version = $v->getVersion('oxid-professional-services/oxid-console');
    $application = new Application('OXID Console', $version);
    $application->run();
} catch (Throwable $ex) {
    //console should print errors always
    print $ex->getMessage();
    print $ex->getTraceAsString();
    //shop exception handler may take care about error code and logging
    throw $ex;
}
